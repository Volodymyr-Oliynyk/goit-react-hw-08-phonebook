{"version":3,"file":"static/js/643.fb9bb428.chunk.js","mappings":"wMAEaA,EAASC,EAAAA,GAAAA,OAAH,0RAIG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,oBAUXJ,EAAAA,GAAAA,OAAH,8Y,6ICbfK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qIAQVO,EAAQP,EAAAA,GAAAA,MAAH,iNAWLQ,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,yZ,mECpBLU,E,QAAQV,GAAAA,GAAH,wIAGJ,SAAAC,GAAC,OAAEA,EAAEC,MAAMS,UAAUC,MAClB,SAAAX,GAAC,OAAEA,EAAEC,MAAMW,YAAYC,S,6JCGlCC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,sBACrCC,SAAUJ,EAAAA,KAEPG,SAAS,yBACTE,IAAI,EAAG,sDACPC,QAAQ,cAAe,qCAGfC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,SAAC,IAAD,kCACA,SAAC,KAAD,CACEC,cAAe,CAAER,MAAO,GAAIE,SAAU,IACtCO,iBAAkBZ,EAClBa,SAXe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,GAASO,EAAAA,EAAAA,IAAUF,IACnBC,KAME,SAKG,SAAAE,GACC,IACEH,EAMEG,EANFH,OACAI,EAKED,EALFC,QACAC,EAIEF,EAJFE,OACAC,EAGEH,EAHFG,aACAC,EAEEJ,EAFFI,aACAC,EACEL,EADFK,WAGF,OACE,UAAChC,EAAA,GAAD,YACE,SAAC,KAAD,CAAOiC,QAAQ,QAAf,oBACA,SAAC,KAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,OACLC,YAAY,mBACZC,MAAOd,EAAOX,MACd0B,SAAUR,EACVS,OAAQR,EACRS,UAAWZ,EAAOhB,OAASe,EAAQf,OAAS,UAE7CgB,EAAOhB,OAASe,EAAQf,QAAS,yBAAMgB,EAAOhB,SAE/C,SAAC,KAAD,CAAOoB,QAAQ,WAAf,uBACA,SAAC,KAAD,CACEC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAOd,EAAOT,SACdwB,SAAUR,EACVS,OAAQR,EACRS,UAAWZ,EAAOd,UAAYa,EAAQb,UAAY,UAEnDc,EAAOd,UAAYa,EAAQb,WAC1B,yBAAMc,EAAOd,YAGf,SAAC,IAAD,CAAQqB,KAAK,SAASM,SAAUZ,EAAhC,0BAOR,mDACsB,SAAC,KAAD,CAAMa,GAAG,YAAT,2B,UCpE5B,EAXkB,WAChB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAC1B,EAAD","sources":["components/common/ButtonStyled.js","components/common/FormStyled.js","components/common/TitleStyled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  margin: 5px 10px;\n  text-transform: capitalize;\n  background-color: ${p => p.theme.colors.backgroundButton};\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\n  cursor: pointer;\n  :hover {\n    background-color: blue;\n  }\n`;\n\nexport const SecondaryButton = styled.button`\n\tdisplay: block;\n\tpadding: 5px 20px;\n\tborder: none;\n\tborder-radius: 2px;\n\toutline: none;\n\tbackground-color: #D45B78;\n\tcolor: white;\n\tcursor: pointer;\n  transition: all 250ms ease-in-out;\n\t@media screen and (max-width: 425px) {\n\t\tpadding: 3px 10px;\n\t\tfont-size: 9px;\n\t}\n\t&:hover {\n\t\tbox-shadow: 5px 5px 18px -3px rgba(255,255,255,0.67);\n\t}\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  width: 16rem;\n  margin-bottom: 20px;\n  color: #0000ff;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n  min-width: 300px;\n  padding-left: 20px;\n  height: 40px;\n  font-family: inherit;\n  border: none;\n  outline: none;\n  border-radius: 0.5rem;\n  box-shadow: inset 0.2rem 0.2rem 0.5rem #ffffff;\n  background: #6178ea;\n  color: #0000ff;\n  :focus {\n    outline: none;\n    box-shadow: 0.3rem 0.3rem 0.6rem #0000ff, -0.2rem -0.2rem 0.5rem #c2c2c2;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  font-size:${p=>p.theme.fontSizes.sm};\n  font-weight: ${p=>p.theme.fontWeights.bold};\n  color: #0000ff;\n`;\n","import { Button } from '../common/ButtonStyled';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/auth/authOperation';\nimport * as yup from 'yup';\nimport { Input, FormStyled, Label } from 'components/common/FormStyled';\nimport { Link } from 'react-router-dom';\nimport { Title } from 'components/common/TitleStyled';\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required('No email provided.'),\n  password: yup\n    .string()\n    .required('No password provided.')\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .matches(/(?=.*[0-9])/, 'Password must contain a number.'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(loginUser(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Title>–êccount login</Title>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        {props => {\n          const {\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n          } = props;\n\n          return (\n            <FormStyled>\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Enter your email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.email && touched.email && 'error'}\n              />\n              {errors.email && touched.email && <div>{errors.email}</div>}\n\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter your password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={errors.password && touched.password && 'error'}\n              />\n              {errors.password && touched.password && (\n                <div>{errors.password}</div>\n              )}\n\n              <Button type=\"submit\" disabled={isSubmitting}>\n                LogIn\n              </Button>\n            </FormStyled>\n          );\n        }}\n      </Formik>\n      <div>\n        Don't have account? <Link to=\"/register\">SginUp</Link>\n      </div>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>LogIn</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Button","styled","p","theme","colors","backgroundButton","FormStyled","Form","Label","Input","Field","Title","fontSizes","sm","fontWeights","bold","schema","yup","shape","email","required","password","min","matches","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","loginUser","props","touched","errors","isSubmitting","handleChange","handleBlur","htmlFor","id","name","type","placeholder","value","onChange","onBlur","className","disabled","to","Helmet"],"sourceRoot":""}