{"version":3,"file":"static/js/667.151e7da3.chunk.js","mappings":"8NAEaA,EAAOC,EAAAA,GAAAA,GAAH,yHAOJC,EAAcD,EAAAA,GAAAA,GAAH,uH,gFCPXE,EAASF,EAAAA,GAAAA,OAAH,0RAIG,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,oBAUXN,EAAAA,GAAAA,OAAH,8Y,mGCdfO,EAAYP,EAAAA,GAAAA,IAAH,6SAUA,SAAAG,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,c,UCV7BC,EAAST,EAAAA,GAAAA,OAAH,6H,uCCONU,GANaV,EAAAA,GAAAA,GAAH,qGAMGA,EAAAA,GAAAA,GAAH,+EAMVW,GAAaX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,iX,SCTVa,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,cACjD,OACE,SAAC,IAAD,UACGJ,GACC,SAACJ,EAAD,WACE,SAAC,KAAD,CAAMS,GAAG,WAAT,4BAGF,SAACT,EAAD,WACE,SAAC,KAAD,CAAMS,GAAG,IAAT,UACE,wCACY,SAAC,MAAD,CAAuBC,KAAK,mB,oBCZvCC,EAAW,WACtB,IAAMC,GAAOP,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKK,QACvCR,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,cAC3CK,GAAWC,EAAAA,EAAAA,MAOjB,OACE,8BACGV,GACC,4BACE,kDAA0BQ,MAC1B,SAAC,IAAD,CAAQG,KAAK,SAASC,QAVR,WACpBH,GAASI,EAAAA,EAAAA,OACR,MAQK,wBAKF,2BACE,yBACE,SAAChB,EAAD,CAAYQ,GAAG,WAAf,yBAEF,yBACE,SAACR,EAAD,CAAYQ,GAAG,QAAf,2BCXZ,EAde,WACb,OACE,UAACZ,EAAD,YACE,UAACE,EAAD,YACI,SAACI,EAAD,KACA,SAACQ,EAAD,QAEJ,0BACE,SAAC,KAAD","sources":["components/ContactList/ContactList.styled.js","components/common/ButtonStyled.js","components/common/Container.js","layouts/common/Header.styles.js","layouts/common/NavBar/NavBar.styled.js","layouts/common/NavBar/NavBar.jsx","layouts/common/UserMenu/UserMenu.jsx","layouts/AppBar.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: stretch;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  margin: 5px 10px;\n  text-transform: capitalize;\n  background-color: ${p => p.theme.colors.backgroundButton};\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);\n  cursor: pointer;\n  :hover {\n    background-color: blue;\n  }\n`;\n\nexport const SecondaryButton = styled.button`\n\tdisplay: block;\n\tpadding: 5px 20px;\n\tborder: none;\n\tborder-radius: 2px;\n\toutline: none;\n\tbackground-color: #D45B78;\n\tcolor: white;\n\tcursor: pointer;\n  transition: all 250ms ease-in-out;\n\t@media screen and (max-width: 425px) {\n\t\tpadding: 3px 10px;\n\t\tfont-size: 9px;\n\t}\n\t&:hover {\n\t\tbox-shadow: 5px 5px 18px -3px rgba(255,255,255,0.67);\n\t}\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  height: auto;\n  margin: 0 auto;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background-color: ${p => p.theme.colors.background};\n  background-position: center;\n  background-size: cover;\n`;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0 0 0;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBarList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const NavBarItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const NavBarLink = styled(NavLink)`\n  display: block;\n  position: relative;\n  font-size: 14px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: white;\n  &.active::after {\n    content: '';\n    display: block;\n    position: absolute;\n    bottom: -3px;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background-color: white;\n    border-radius: 2px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { BsJournalBookmarkFill } from 'react-icons/bs';\nimport { List } from 'components/ContactList/ContactList.styled';\nimport { NavBarItem } from './NavBar.styled';\n\nexport const NavBar = () => {\n  const isLogged = useSelector(state => state.auth.isLoggedIn);\n  return (\n    <List>\n      {isLogged ? (\n        <NavBarItem>\n          <Link to=\"contacts\"> Contacts  </Link>\n        </NavBarItem>\n      ) : (\n        <NavBarItem>\n          <Link to=\"/\">\n            <h1>\n              Phonebook <BsJournalBookmarkFill size=\"20px\" />\n            </h1>\n          </Link>\n          </NavBarItem>\n      )}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logoutUser } from 'redux/auth/authOperation';\nimport { Navigate } from 'react-router';\nimport { Button } from 'components/common/ButtonStyled';\nimport { NavBarLink } from '../NavBar/NavBar.styled';\n\nexport const UserMenu = () => {\n  const name = useSelector(state => state.auth.name);\n  const isLogged = useSelector(state => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logoutUser());\n    <Navigate to=\"/\" replace={true} />;\n  };\n\n  return (\n    <>\n      {isLogged ? (\n        <div>\n          <p>You are logged in as: {name}</p>\n          <Button type=\"button\" onClick={logoutHandler}>\n            LogOut\n          </Button>\n        </div>\n      ) : (\n        <ul>\n          <li>\n            <NavBarLink to=\"register\">Register</NavBarLink>\n          </li>\n          <li>\n            <NavBarLink to=\"login\">LogIn</NavBarLink>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n};\n","import { Container } from 'components/common/Container';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from './common/Header.styles';\nimport { NavBar } from './common/NavBar/NavBar';\nimport { UserMenu } from './common/UserMenu/UserMenu';\n\nconst AppBar = () => {\n  return (\n    <Container>\n      <Header>\n          <NavBar />\n          <UserMenu />\n       </Header>\n      <div>\n        <Outlet />\n      </div>\n    </Container>\n  );\n};\n\nexport default AppBar;\n"],"names":["List","styled","ContactItem","Button","p","theme","colors","backgroundButton","Container","background","Header","NavBarItem","NavBarLink","NavLink","NavBar","isLogged","useSelector","state","auth","isLoggedIn","to","size","UserMenu","name","dispatch","useDispatch","type","onClick","logoutUser"],"sourceRoot":""}